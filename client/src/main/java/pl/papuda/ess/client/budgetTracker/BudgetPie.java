package pl.papuda.ess.client.budgetTracker;

import java.awt.BorderLayout;
import java.awt.Color;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.JPanel;
import org.knowm.xchart.PieChart;
import org.knowm.xchart.PieChartBuilder;
import org.knowm.xchart.PieSeries;
import org.knowm.xchart.XChartPanel;
import org.knowm.xchart.style.PieStyler;
import pl.papuda.ess.client.model.Event;
import pl.papuda.ess.client.model.Expense;

public class BudgetPie extends javax.swing.JPanel {

    /**
     * Creates new form BudgetPie
     */
    public BudgetPie() {
        initComponents();
        initChartComponent();
    }

    // Create Chart
    private final PieChart chart = new PieChartBuilder().width(600).height(400).title("Budget: $100").build();

    private void initChartComponent() {
        JPanel chartPanel = new XChartPanel<>(chart);
        add(chartPanel, BorderLayout.CENTER);
    }

    void setEvent(Event event) {
        // Customize Chart
        PieStyler styler = chart.getStyler();
        styler.setLegendVisible(false);
        styler.setDefaultSeriesRenderStyle(PieSeries.PieSeriesRenderStyle.Donut);
        styler.setLabelType(PieStyler.LabelType.NameAndPercentage);
        styler.setLabelsDistance(1.0);
        styler.setLabelsFontColorAutomaticEnabled(false);
        styler.setLabelsFontColor(Color.black);
        styler.setPlotContentSize(0.75);

        // Need to convert to array (i.e. copy data) to avoid
        // ConcurrentModificationException
        for (var series : chart.getSeriesMap().keySet().toArray()) {
            chart.removeSeries(series.toString());
        }
        chart.addSeries("Expense 1 ($30)", 30);
        chart.addSeries("Expense 2 ($20)", 20);
        chart.addSeries("Expense 3 ($25)", 25);
        chart.addSeries("Remaining budget", 25);

        NumberFormat format = NumberFormat.getCurrencyInstance(Locale.US);
        String title = "Budget: " + format.format(event.getBudgetCents() / 100.0);
        chart.setTitle(title);

        for (Expense expense : event.getExpenses()) {
            System.out.println(expense);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
